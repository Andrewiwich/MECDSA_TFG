/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package andrea.tfg.panels;

import andrea.tfg.program.CurvaP256;
import andrea.tfg.program.CurvaSM2;
import andrea.tfg.program.CurvaSecp256k1;
import andrea.tfg.program.CurvaSecp256r1;
import andrea.tfg.program.GenerarCurvasInputParam;
import andrea.tfg.program.FirmaMensaje2Curvas;
import andrea.tfg.program.GenerarClaves;
import andrea.tfg.program.OperacionesCE;
import andrea.tfg.program.OperacionesParamCurvas;
import static andrea.tfg.program.OperacionesParamCurvas.calcularPuntoBase;
import static andrea.tfg.program.OperacionesParamCurvas.pertenecenAFp;
import andrea.tfg.program.ToStringJSON;
import java.awt.Toolkit;
import java.math.BigInteger;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;

/**
 *
 * @author Andrea
 */
public class PanelAvanzado extends javax.swing.JPanel {

    /**
     * Creates new form panelAvanzado
     */
    public PanelAvanzado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "Convert2Lambda"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1P256 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ParP1P256 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        ParA1P256 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        ParB1P256 = new javax.swing.JTextField();
        conf1P256 = new javax.swing.JButton();
        jDialog2P256 = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        ParP2P256 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        ParA2P256 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ParB2P256 = new javax.swing.JTextField();
        conf2P256 = new javax.swing.JButton();
        jDialog1SM2 = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        ParP1SM2 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        ParA1SM2 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        ParB1SM2 = new javax.swing.JTextField();
        conf1SM2 = new javax.swing.JButton();
        jDialog2SM2 = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        ParP2SM2 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        ParA2SM2 = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        ParB2SM2 = new javax.swing.JTextField();
        conf2SM2 = new javax.swing.JButton();
        jDialog1Secp256r1 = new javax.swing.JDialog();
        jPanel20 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        ParP1Secp256r1 = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        ParA1Secp256r1 = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        ParB1Secp256r1 = new javax.swing.JTextField();
        conf1Secp256r1 = new javax.swing.JButton();
        jDialog2Secp256r1 = new javax.swing.JDialog();
        jPanel24 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        ParP2Secp256r1 = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        ParA2Secp256r1 = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        ParB2Secp256r1 = new javax.swing.JTextField();
        conf2Secp256r1 = new javax.swing.JButton();
        jDialog1Secp256k1 = new javax.swing.JDialog();
        jPanel28 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        ParP1Secp256k1 = new javax.swing.JTextField();
        jPanel30 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        ParA1Secp256k1 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        ParB1Secp256k1 = new javax.swing.JTextField();
        conf1Secp256k1 = new javax.swing.JButton();
        jDialog2Secp256k1 = new javax.swing.JDialog();
        jPanel32 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        ParP2Secp256k1 = new javax.swing.JTextField();
        jPanel34 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        ParA2Secp256k1 = new javax.swing.JTextField();
        jPanel35 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        ParB2Secp256k1 = new javax.swing.JTextField();
        conf2Secp256k1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        botonUnoSM2 = new javax.swing.JRadioButton();
        botonUnosecp256r1 = new javax.swing.JRadioButton();
        botonUnosecp256k1 = new javax.swing.JRadioButton();
        botonUnoP256 = new javax.swing.JRadioButton();
        cambParaUno = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botonDosP256 = new javax.swing.JRadioButton();
        botonDosSM2 = new javax.swing.JRadioButton();
        botonDossecp256r1 = new javax.swing.JRadioButton();
        botonDossecp256k1 = new javax.swing.JRadioButton();
        cambParaDos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoTextoMsgPred = new javax.swing.JTextArea();
        botonFirmar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InputMensaje = new javax.swing.JTextArea();

        jDialog1P256.setLocation(new java.awt.Point(50, 50));
        jDialog1P256.setSize(getPreferredSize());
        jDialog1P256.setType(java.awt.Window.Type.POPUP);
        jDialog1P256.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel5.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel6.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel6.setText("Parámetro p");

        ParP1P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP1P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP1P256)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP1P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel7.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel7.setText("Parámetro a");

        ParA1P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA1P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA1P256)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA1P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel8.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel8.setText("Parámetro b");

        ParB1P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB1P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB1P256)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB1P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf1P256.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf1P256.setText("Confirmar");
        conf1P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf1P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf1P256, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(conf1P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jDialog1P256.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 520, 560));

        jLabel9.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel9.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel10.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel10.setText("Parámetro p");

        ParP2P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP2P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP2P256)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP2P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel11.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel11.setText("Parámetro a");

        ParA2P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA2P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA2P256)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA2P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel12.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel12.setText("Parámetro b");

        ParB2P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB2P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB2P256)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB2P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf2P256.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf2P256.setText("Confirmar");
        conf2P256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf2P256ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf2P256, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(conf2P256, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2P256Layout = new javax.swing.GroupLayout(jDialog2P256.getContentPane());
        jDialog2P256.getContentPane().setLayout(jDialog2P256Layout);
        jDialog2P256Layout.setHorizontalGroup(
            jDialog2P256Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2P256Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jDialog2P256Layout.setVerticalGroup(
            jDialog2P256Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2P256Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel13.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel14.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel14.setText("Parámetro p");

        ParP1SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP1SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP1SM2)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP1SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel15.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel15.setText("Parámetro a");

        ParA1SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA1SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA1SM2)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA1SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel16.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel16.setText("Parámetro b");

        ParB1SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB1SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB1SM2)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB1SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf1SM2.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf1SM2.setText("Confirmar");
        conf1SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf1SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf1SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(conf1SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1SM2Layout = new javax.swing.GroupLayout(jDialog1SM2.getContentPane());
        jDialog1SM2.getContentPane().setLayout(jDialog1SM2Layout);
        jDialog1SM2Layout.setHorizontalGroup(
            jDialog1SM2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1SM2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jDialog1SM2Layout.setVerticalGroup(
            jDialog1SM2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1SM2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel17.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel18.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel18.setText("Parámetro p");

        ParP2SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP2SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP2SM2)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP2SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel19.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel19.setText("Parámetro a");

        ParA2SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA2SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA2SM2)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA2SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel20.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel20.setText("Parámetro b");

        ParB2SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB2SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB2SM2)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB2SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf2SM2.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf2SM2.setText("Confirmar");
        conf2SM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf2SM2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf2SM2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(conf2SM2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog2SM2Layout = new javax.swing.GroupLayout(jDialog2SM2.getContentPane());
        jDialog2SM2.getContentPane().setLayout(jDialog2SM2Layout);
        jDialog2SM2Layout.setHorizontalGroup(
            jDialog2SM2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2SM2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jDialog2SM2Layout.setVerticalGroup(
            jDialog2SM2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2SM2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel21.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel22.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel22.setText("Parámetro p");

        ParP1Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP1Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP1Secp256r1)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP1Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel23.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel23.setText("Parámetro a");

        ParA1Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA1Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA1Secp256r1)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA1Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel24.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel24.setText("Parámetro b");

        ParB1Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB1Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB1Secp256r1)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB1Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf1Secp256r1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf1Secp256r1.setText("Confirmar");
        conf1Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf1Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf1Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(conf1Secp256r1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog1Secp256r1Layout = new javax.swing.GroupLayout(jDialog1Secp256r1.getContentPane());
        jDialog1Secp256r1.getContentPane().setLayout(jDialog1Secp256r1Layout);
        jDialog1Secp256r1Layout.setHorizontalGroup(
            jDialog1Secp256r1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Secp256r1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jDialog1Secp256r1Layout.setVerticalGroup(
            jDialog1Secp256r1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Secp256r1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jLabel25.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel25.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel26.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel26.setText("Parámetro p");

        ParP2Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP2Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP2Secp256r1)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP2Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel27.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel27.setText("Parámetro a");

        ParA2Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA2Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA2Secp256r1)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA2Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel28.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel28.setText("Parámetro b");

        ParB2Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB2Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB2Secp256r1)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB2Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf2Secp256r1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf2Secp256r1.setText("Confirmar");
        conf2Secp256r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf2Secp256r1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf2Secp256r1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(conf2Secp256r1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog2Secp256r1Layout = new javax.swing.GroupLayout(jDialog2Secp256r1.getContentPane());
        jDialog2Secp256r1.getContentPane().setLayout(jDialog2Secp256r1Layout);
        jDialog2Secp256r1Layout.setHorizontalGroup(
            jDialog2Secp256r1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Secp256r1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jDialog2Secp256r1Layout.setVerticalGroup(
            jDialog2Secp256r1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Secp256r1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jLabel29.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel29.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel30.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel30.setText("Parámetro p");

        ParP1Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP1Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP1Secp256k1)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP1Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel31.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel31.setText("Parámetro a");

        ParA1Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA1Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA1Secp256k1)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA1Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel32.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel32.setText("Parámetro b");

        ParB1Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB1Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB1Secp256k1)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB1Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf1Secp256k1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf1Secp256k1.setText("Confirmar");
        conf1Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf1Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf1Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel29)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(conf1Secp256k1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog1Secp256k1Layout = new javax.swing.GroupLayout(jDialog1Secp256k1.getContentPane());
        jDialog1Secp256k1.getContentPane().setLayout(jDialog1Secp256k1Layout);
        jDialog1Secp256k1Layout.setHorizontalGroup(
            jDialog1Secp256k1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Secp256k1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jDialog1Secp256k1Layout.setVerticalGroup(
            jDialog1Secp256k1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Secp256k1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel33.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel33.setText("Introduzca los parámetros de la curva de tamaño recomendado 256 bits.");

        jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel34.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel34.setText("Parámetro p");

        ParP2Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParP2Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParP2Secp256k1)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParP2Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel35.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel35.setText("Parámetro a");

        ParA2Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParA2Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParA2Secp256k1)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParA2Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel36.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel36.setText("Parámetro b");

        ParB2Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParB2Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ParB2Secp256k1)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParB2Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        conf2Secp256k1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        conf2Secp256k1.setText("Confirmar");
        conf2Secp256k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conf2Secp256k1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conf2Secp256k1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel33)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(conf2Secp256k1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2Secp256k1Layout = new javax.swing.GroupLayout(jDialog2Secp256k1.getContentPane());
        jDialog2Secp256k1.getContentPane().setLayout(jDialog2Secp256k1Layout);
        jDialog2Secp256k1Layout.setHorizontalGroup(
            jDialog2Secp256k1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Secp256k1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jDialog2Secp256k1Layout.setVerticalGroup(
            jDialog2Secp256k1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Secp256k1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        setForeground(new java.awt.Color(240, 240, 240));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        botonUnoSM2.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonUnoSM2.setText("SM2");

        botonUnosecp256r1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonUnosecp256r1.setText("secp256r1");

        botonUnosecp256k1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonUnosecp256k1.setText("secp256k1");

        botonUnoP256.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonUnoP256.setText("P-256");
        botonUnoP256.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnoP256ActionPerformed(evt);
            }
        });

        cambParaUno.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        cambParaUno.setText("Cambiar parámetros");
        cambParaUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambParaUnoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel1.setText("Seleccione la primera curva");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione la segunda curva");

        botonDosP256.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonDosP256.setText("P-256");

        botonDosSM2.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonDosSM2.setText("SM2");

        botonDossecp256r1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonDossecp256r1.setText("secp256r1");

        botonDossecp256k1.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonDossecp256k1.setText("secp256k1");

        cambParaDos.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        cambParaDos.setText("Cambiar parámetros");
        cambParaDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambParaDosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cambParaUno)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(botonUnosecp256r1)
                            .addComponent(botonUnoSM2)
                            .addComponent(botonUnosecp256k1)
                            .addComponent(botonUnoP256))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cambParaDos)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonDossecp256r1)
                            .addComponent(botonDosSM2)
                            .addComponent(botonDossecp256k1)
                            .addComponent(botonDosP256)))
                    .addComponent(jLabel2))
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonUnoP256)
                        .addGap(6, 6, 6)
                        .addComponent(botonUnoSM2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonUnosecp256r1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonUnosecp256k1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cambParaUno))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonDosP256)
                        .addGap(6, 6, 6)
                        .addComponent(botonDosSM2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonDossecp256r1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonDossecp256k1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cambParaDos)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel4.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel4.setText("  Resultado");

        campoTextoMsgPred.setEditable(false);
        campoTextoMsgPred.setBackground(new java.awt.Color(240, 240, 240));
        campoTextoMsgPred.setColumns(20);
        campoTextoMsgPred.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        campoTextoMsgPred.setRows(5);
        campoTextoMsgPred.setBorder(null);
        jScrollPane2.setViewportView(campoTextoMsgPred);

        botonFirmar.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        botonFirmar.setText("Firmar");
        botonFirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonFirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonFirmar)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel3.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        jLabel3.setText("Introduzca el mensaje");

        InputMensaje.setBackground(new java.awt.Color(240, 240, 240));
        InputMensaje.setColumns(20);
        InputMensaje.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        InputMensaje.setRows(5);
        InputMensaje.setBorder(null);
        InputMensaje.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InputMensajeFocusGained(evt);
            }
        });
        InputMensaje.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                InputMensajeInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(InputMensaje);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void InputMensajeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputMensajeFocusGained

    }//GEN-LAST:event_InputMensajeFocusGained

    private void InputMensajeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_InputMensajeInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_InputMensajeInputMethodTextChanged

    private void cambParaUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambParaUnoActionPerformed

        String error = "ERROR: Seleccione una curva";

        // El if de fuera se utiliza para comprobar que se marca al menos una curva, si no es así salta un mensaje de error.
        if ((botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected() && !botonUnosecp256k1.isSelected())
                || (!botonUnoP256.isSelected() && !botonUnosecp256k1.isSelected() && !botonUnosecp256r1.isSelected() && botonUnoSM2.isSelected())
                || (botonUnosecp256r1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256k1.isSelected())
                || (botonUnosecp256k1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected())) {

            if (botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected() && !botonUnosecp256k1.isSelected()) {
                jDialog1P256.setSize(550, 600);                  // Con esto cambiamos el tamaño de la ventana.
                jDialog1P256.setTitle("Parámetros primera curva P-256"); // Para cambiar el título de la ventana.
                jDialog1P256.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog1P256.setLocationRelativeTo(null);       // Para que se quede centrada.      
                jDialog1P256.setVisible(true);                  // Para que sea visible pero en el caso de que pulsemos el botón.
            }
            if (!botonUnoP256.isSelected() && !botonUnosecp256k1.isSelected() && !botonUnosecp256r1.isSelected() && botonUnoSM2.isSelected()) {
                jDialog1SM2.setSize(550, 600);
                jDialog1SM2.setTitle("Parámetros primera curva SM2");
                jDialog1SM2.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog1SM2.setLocationRelativeTo(null);
                jDialog1SM2.setVisible(true);
            }
            if (botonUnosecp256r1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256k1.isSelected()) {
                jDialog1Secp256r1.setSize(550, 600);
                jDialog1Secp256r1.setTitle("Parámetros primera curva secp256r1");
                jDialog1Secp256r1.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog1Secp256r1.setLocationRelativeTo(null);
                jDialog1Secp256r1.setVisible(true);
            }
            if (botonUnosecp256k1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected()) {
                jDialog1Secp256k1.setSize(550, 600);
                jDialog1Secp256k1.setTitle("Parámetros primera curva secp256k1");
                jDialog1Secp256k1.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog1Secp256k1.setLocationRelativeTo(null);
                jDialog1Secp256k1.setVisible(true);
            }
        } else {
            System.out.println(error + '\n');
            JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cambParaUnoActionPerformed

    private void cambParaDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambParaDosActionPerformed

        String error = "ERROR: Seleccione una curva";

        // El if de fuera se utiliza para comprobar que se marca al menos una curva, si no es así salta un mensaje de error.
        if ((botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected() && !botonDossecp256k1.isSelected())
                || (!botonDosP256.isSelected() && !botonDossecp256k1.isSelected() && !botonDossecp256r1.isSelected() && botonDosSM2.isSelected())
                || (botonDossecp256r1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256k1.isSelected())
                || (botonDossecp256k1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected())) {

            if (botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected() && !botonDossecp256k1.isSelected()) {
                jDialog2P256.setSize(550, 600);                  // Con esto cambiamos el tamaño de la ventana.
                jDialog2P256.setTitle("Parámetros segunda curva P-256"); // Para cambiar el título de la ventana.
                jDialog2P256.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog2P256.setLocationRelativeTo(null);       // Para que se quede centrada.      
                jDialog2P256.setVisible(true);                  // Para que sea visible pero en el caso de que pulsemos el botón.
            }
            if (!botonDosP256.isSelected() && !botonDossecp256k1.isSelected() && !botonDossecp256r1.isSelected() && botonDosSM2.isSelected()) {
                jDialog2SM2.setSize(550, 600);
                jDialog2SM2.setTitle("Parámetros segunda curva SM2");
                jDialog2SM2.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog2SM2.setLocationRelativeTo(null);
                jDialog2SM2.setVisible(true);
            }
            if (botonDossecp256r1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256k1.isSelected()) {
                jDialog2Secp256r1.setSize(550, 600);
                jDialog2Secp256r1.setTitle("Parámetros segunda curva secp256r1");
                jDialog2Secp256r1.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog2Secp256r1.setLocationRelativeTo(null);
                jDialog2Secp256r1.setVisible(true);
            }
            if (botonDossecp256k1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected()) {
                jDialog2Secp256k1.setSize(550, 600);
                jDialog2Secp256k1.setTitle("Parámetros segunda curva secp256k1");
                jDialog2Secp256k1.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("andrea/tfg/resources/blockchain.png")));
                jDialog2Secp256k1.setLocationRelativeTo(null);
                jDialog2Secp256k1.setVisible(true);
            }
        } else {
            System.out.println(error + '\n');
            JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cambParaDosActionPerformed

    
    ///////////////////////////////////////////////////////////////////////////////////////
    // Método que firma con las curvas y los parámetros pasados por el usuario.
    public String firmarConInputParam() throws NoSuchAlgorithmException {

        String res = "";
        GenerarCurvasInputParam cc = new GenerarCurvasInputParam();
        String msg = InputMensaje.getText();
        String error = "No se ha encontrado ningún punto base compruebe los parámetros de las curvas.";
        
        // Caso de que la curva 1 sea P-256 y la curva 2 sea P-256.
        if (botonUnoP256.isSelected() && botonDosP256.isSelected()) {
            CurvaP256 c1 = cc.generarCurvaParamP256(ParA1P256.getText(), ParB1P256.getText(), ParP1P256.getText());
            CurvaP256 c2 = cc.generarCurvaParamP256(ParA2P256.getText(), ParB2P256.getText(), ParP2P256.getText());
            /*
            BigInteger[] ptoBaseC1 = new BigInteger[2];
            ptoBaseC1[0] = c1.getxP().mod(c1.getP());
            ptoBaseC1[1] = c1.getyP().mod(c1.getP());
            c1.setPxy(ptoBaseC1);
            
            BigInteger[] ptoBaseC2 = new BigInteger[2];
            ptoBaseC2[0] = c2.getxP().mod(c2.getP());
            ptoBaseC2[1] = c2.getyP().mod(c2.getP());
            c2.setPxy(ptoBaseC2);
            */
            System.out.println("Comprobamos si pertenece " + OperacionesParamCurvas.puntoPertenece(c1.getPxy(), c1.getA(), c1.getB(), c1.getN())); //--> No se cumple.
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            //System.out.println("Prueba coords pto c1: " + ToStringJSON.imprimirPunto(ptoBaseC1) + '\n');
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea P-256 y la curva 2 sea SM2.
        if (botonUnoP256.isSelected() && botonDosSM2.isSelected()) {
            CurvaP256 c1 = cc.generarCurvaParamP256(ParA1P256.getText(), ParB1P256.getText(), ParP1P256.getText());
            CurvaSM2 c2 = cc.generarCurvaParamSM2(ParA2SM2.getText(), ParB2SM2.getText(), ParP2SM2.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea P-256 y la curva 2 sea Secp256r1.
        if (botonUnoP256.isSelected() && botonDossecp256r1.isSelected()) {
            CurvaP256 c1 = cc.generarCurvaParamP256(ParA1P256.getText(), ParB1P256.getText(), ParP1P256.getText());
            CurvaSecp256r1 c2 = cc.generarCurvaParamSecp256r1(ParA2Secp256r1.getText(), ParB2Secp256r1.getText(), ParP2Secp256r1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea P-256 y la curva 2 sea Secp256k1.
        if (botonUnoP256.isSelected() && botonDossecp256k1.isSelected()) {
            CurvaP256 c1 = cc.generarCurvaParamP256(ParA1P256.getText(), ParB1P256.getText(), ParP1P256.getText());
            CurvaSecp256k1 c2 = cc.generarCurvaParamSecp256k1(ParA2Secp256k1.getText(), ParB2Secp256k1.getText(), ParP2Secp256k1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea SM2 y la curva 2 sea P-256.
        if (botonUnoSM2.isSelected() && botonDosP256.isSelected()) {
            CurvaSM2 c1 = cc.generarCurvaParamSM2(ParA1SM2.getText(), ParB1SM2.getText(), ParP1SM2.getText());
            CurvaP256 c2 = cc.generarCurvaParamP256(ParA2P256.getText(), ParB2P256.getText(), ParP2P256.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea SM2 y la curva 2 sea SM2.
        if (botonUnoSM2.isSelected() && botonDosSM2.isSelected()) {
            CurvaSM2 c1 = cc.generarCurvaParamSM2(ParA1SM2.getText(), ParB1SM2.getText(), ParP1SM2.getText());
            CurvaSM2 c2 = cc.generarCurvaParamSM2(ParA2P256.getText(), ParB2SM2.getText(), ParP2SM2.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea SM2 y la curva 2 sea Secp256r1.
        if (botonUnoSM2.isSelected() && botonDossecp256r1.isSelected()) {
            CurvaSM2 c1 = cc.generarCurvaParamSM2(ParA1SM2.getText(), ParB1SM2.getText(), ParP1SM2.getText());
            CurvaSecp256r1 c2 = cc.generarCurvaParamSecp256r1(ParA2Secp256r1.getText(), ParB2Secp256r1.getText(), ParP2Secp256r1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea SM2 y la curva 2 sea Secp256k1.
        if (botonUnoSM2.isSelected() && botonDossecp256k1.isSelected()) {
            CurvaSM2 c1 = cc.generarCurvaParamSM2(ParA1SM2.getText(), ParB1SM2.getText(), ParP1SM2.getText());
            CurvaSecp256k1 c2 = cc.generarCurvaParamSecp256k1(ParA2Secp256k1.getText(), ParB2Secp256k1.getText(), ParP2Secp256k1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }
        }
        // Caso de que la curva 1 sea Secp256r1 y la curva 2 sea P-256.
        if (botonUnosecp256r1.isSelected() && botonDosP256.isSelected()) {
            CurvaSecp256r1 c1 = cc.generarCurvaParamSecp256r1(ParA1Secp256r1.getText(), ParB1Secp256r1.getText(), ParP1Secp256r1.getText());
            CurvaP256 c2 = cc.generarCurvaParamP256(ParA2P256.getText(), ParB2P256.getText(), ParP2P256.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256r1 y la curva 2 sea SM2.
        if (botonUnosecp256r1.isSelected() && botonDosSM2.isSelected()) {
            CurvaSecp256r1 c1 = cc.generarCurvaParamSecp256r1(ParA1Secp256r1.getText(), ParB1Secp256r1.getText(), ParP1Secp256r1.getText());
            CurvaSM2 c2 = cc.generarCurvaParamSM2(ParA2SM2.getText(), ParB2SM2.getText(), ParP2SM2.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256r1 y la curva 2 sea Secp256r1.
        if (botonUnosecp256r1.isSelected() && botonDossecp256r1.isSelected()) {
            CurvaSecp256r1 c1 = cc.generarCurvaParamSecp256r1(ParA1Secp256r1.getText(), ParB1Secp256r1.getText(), ParP1Secp256r1.getText());
            CurvaSecp256r1 c2 = cc.generarCurvaParamSecp256r1(ParA2Secp256r1.getText(), ParB2Secp256r1.getText(), ParP2Secp256r1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256r1 y la curva 2 sea Secp256k1.
        if (botonUnosecp256r1.isSelected() && botonDossecp256k1.isSelected()) {
            CurvaSecp256r1 c1 = cc.generarCurvaParamSecp256r1(ParA1Secp256r1.getText(), ParB1Secp256r1.getText(), ParP1Secp256r1.getText());
            CurvaSecp256k1 c2 = cc.generarCurvaParamSecp256k1(ParA2Secp256k1.getText(), ParB2Secp256k1.getText(), ParP2Secp256k1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256k1 y la curva 2 sea P-256.
        if (botonUnosecp256k1.isSelected() && botonDosP256.isSelected()) {
            CurvaSecp256k1 c1 = cc.generarCurvaParamSecp256k1(ParA1Secp256k1.getText(), ParB1Secp256k1.getText(), ParP1Secp256k1.getText());
            CurvaP256 c2 = cc.generarCurvaParamP256(ParA2P256.getText(), ParB2P256.getText(), ParP2P256.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256k1 y la curva 2 sea SM2.
        if (botonUnosecp256k1.isSelected() && botonDosSM2.isSelected()) {
            CurvaSecp256k1 c1 = cc.generarCurvaParamSecp256k1(ParA1Secp256k1.getText(), ParB1Secp256k1.getText(), ParP1Secp256k1.getText());
            CurvaSM2 c2 = cc.generarCurvaParamSM2(ParA2SM2.getText(), ParB2SM2.getText(), ParP2SM2.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256k1 y la curva 2 sea Secp256r1.
        if (botonUnosecp256k1.isSelected() && botonDossecp256r1.isSelected()) {
            CurvaSecp256k1 c1 = cc.generarCurvaParamSecp256k1(ParA1Secp256k1.getText(), ParB1Secp256k1.getText(), ParP1Secp256k1.getText());
            CurvaSecp256r1 c2 = cc.generarCurvaParamSecp256r1(ParA2Secp256r1.getText(), ParB2Secp256r1.getText(), ParP2Secp256r1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        // Caso de que la curva 1 sea Secp256k1 y la curva 2 sea Secp256k1.
        if (botonUnosecp256k1.isSelected() && botonDossecp256k1.isSelected()) {
            CurvaSecp256k1 c1 = cc.generarCurvaParamSecp256k1(ParA1Secp256k1.getText(), ParB1Secp256k1.getText(), ParP1Secp256k1.getText());
            CurvaSecp256k1 c2 = cc.generarCurvaParamSecp256k1(ParA2Secp256k1.getText(), ParB2Secp256k1.getText(), ParP2Secp256k1.getText());
            
            System.out.println("Imprimimos coords pto c1: " + ToStringJSON.imprimirPunto(c1.getPxy()));
            System.out.println("Imprimimos coords pto c2: " + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
            
            // En este if comprobamos si existe el punto base, si no existe, es (0,0) por defecto --> else --> Mensaje de error.
            if((ToStringJSON.imprimirPunto(c1.getPxy()).compareTo("(0,0)") != 0)
                    && (ToStringJSON.imprimirPunto(c2.getPxy()).compareTo("(0,0)") != 0)) {
                
                System.out.println("Comprobamos los parámetros primera curva: " + "a1:" + c1.getA() + " b1:" + c1.getB() + " P1:" + ToStringJSON.imprimirPunto(c1.getPxy()));
                System.out.println("Generando el par de claves para c1...........");
                GenerarClaves cls1 = new GenerarClaves(c1.getPxy(), c1.getA(), c1.getN());
                System.out.println("Claves generdas para c1!! \n");
                
                System.out.println("Comprobamos los parámetros segunda curva: " + "a2:" + c2.getA() + " b2:" + c2.getB() + " P2:" + ToStringJSON.imprimirPunto(c2.getPxy()) + '\n');
                System.out.println("Generando el par de claves para c2...........");
                GenerarClaves cls2 = new GenerarClaves(c2.getPxy(), c2.getA(), c2.getN());
                System.out.println("Claves generdas para c2!! \n");
                
                System.out.println("El mensaje introducido por el usuario es: " + msg + '\n');
                BigInteger[] firma = FirmaMensaje2Curvas.firmaMsj(msg, c1.getN(), c2.getN(), c1.getPxy(), c2.getPxy(), c1.getA(), c2.getA(), cls1.getClavePrivada(), cls2.getClavePrivada());
                res = ToStringJSON.arrayToJSON(firma);
                
            } else {
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            }            
        }
        return res;
    }
    /////////////////////////////////////////////////////////////////////////////////////////////
    
    private void botonFirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFirmarActionPerformed

        // Con este bloque de condiciones lanzamos mensajes de aviso, error y si no se producen firmamos el mensaje.
        if (InputMensaje.getText().isEmpty()) {
            campoTextoMsgPred.setText("");
            Object msj4 = "No ha introducido el mensaje";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
        } else if ((!InputMensaje.getText().isEmpty()) && ((botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected() && !botonUnosecp256k1.isSelected())
                || (!botonUnoP256.isSelected() && !botonUnosecp256k1.isSelected() && !botonUnosecp256r1.isSelected() && botonUnoSM2.isSelected())
                || (botonUnosecp256r1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256k1.isSelected())
                || (botonUnosecp256k1.isSelected() && !botonUnoP256.isSelected() && !botonUnoSM2.isSelected() && !botonUnosecp256r1.isSelected()))
                && ((botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected() && !botonDossecp256k1.isSelected())
                || (!botonDosP256.isSelected() && !botonDossecp256k1.isSelected() && !botonDossecp256r1.isSelected() && botonDosSM2.isSelected())
                || (botonDossecp256r1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256k1.isSelected())
                || (botonDossecp256k1.isSelected() && !botonDosP256.isSelected() && !botonDosSM2.isSelected() && !botonDossecp256r1.isSelected()))) {

            try {
                /* TODO: EN ALGUNOS CASOS FALLA VER PQ!!!!!!!! */
                //System.out.println("PRUEBAA DE QUE ENTRO \n");
                campoTextoMsgPred.setText(firmarConInputParam());
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(PanelAvanzado.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            String error = "ERROR: No ha seleccionado correctamente las curvas";
            System.out.println(error + '\n');
            JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonFirmarActionPerformed

    private void ParP1P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP1P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP1P256ActionPerformed

    private void ParA1P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA1P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA1P256ActionPerformed

    private void ParB1P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB1P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB1P256ActionPerformed

    private void ParP2P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP2P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP2P256ActionPerformed

    private void ParA2P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA2P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA2P256ActionPerformed

    private void ParB2P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB2P256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB2P256ActionPerformed

    private void ParP1SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP1SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP1SM2ActionPerformed

    private void ParA1SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA1SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA1SM2ActionPerformed

    private void ParB1SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB1SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB1SM2ActionPerformed

    private void ParP2SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP2SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP2SM2ActionPerformed

    private void ParA2SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA2SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA2SM2ActionPerformed

    private void ParB2SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB2SM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB2SM2ActionPerformed

    private void ParP1Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP1Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP1Secp256r1ActionPerformed

    private void ParA1Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA1Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA1Secp256r1ActionPerformed

    private void ParB1Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB1Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB1Secp256r1ActionPerformed

    private void ParP2Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP2Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP2Secp256r1ActionPerformed

    private void ParA2Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA2Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA2Secp256r1ActionPerformed

    private void ParB2Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB2Secp256r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB2Secp256r1ActionPerformed

    private void ParP1Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP1Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP1Secp256k1ActionPerformed

    private void ParA1Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA1Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA1Secp256k1ActionPerformed

    private void ParB1Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB1Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB1Secp256k1ActionPerformed

    private void ParP2Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParP2Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParP2Secp256k1ActionPerformed

    private void ParA2Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParA2Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParA2Secp256k1ActionPerformed

    private void ParB2Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParB2Secp256k1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ParB2Secp256k1ActionPerformed

    private void conf1P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf1P256ActionPerformed

        if (ParA1P256.getText().isEmpty() || ParB1P256.getText().isEmpty() || ParP1P256.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            
            String a = ParA1P256.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB1P256.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP1P256.getText();
            BigInteger bP = new BigInteger(p);
            
            //BigInteger[] pp = calcularPuntoBase(bP, bA, bB);
            // Dentro del if de abajo poner || pp == null
            if (!pertenecenAFp(bP, bA, bB) ) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog1P256.setVisible(false);
            }
            // Prueba de cálculo del punto base.
            // BigInteger[] pp = calcularPuntoBase(bP, bA, bB);
            //System.out.println(ToStringJSON.imprimirPunto(pp));        
        }
    }//GEN-LAST:event_conf1P256ActionPerformed

    private void botonUnoP256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnoP256ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonUnoP256ActionPerformed

    private void conf2P256ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf2P256ActionPerformed
        if (ParA2P256.getText().isEmpty() || ParB2P256.getText().isEmpty() || ParP2P256.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado si se introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA2P256.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB2P256.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP2P256.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog2P256.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf2P256ActionPerformed

    private void conf1SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf1SM2ActionPerformed
        if (ParA1SM2.getText().isEmpty() || ParB1SM2.getText().isEmpty() || ParP1SM2.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA1SM2.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB1SM2.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP1SM2.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog1SM2.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf1SM2ActionPerformed

    private void conf2SM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf2SM2ActionPerformed
        if (ParA2SM2.getText().isEmpty() || ParB2SM2.getText().isEmpty() || ParP2SM2.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA2SM2.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB2SM2.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP2SM2.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog2SM2.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf2SM2ActionPerformed

    private void conf1Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf1Secp256r1ActionPerformed
        if (ParA1Secp256r1.getText().isEmpty() || ParB1Secp256r1.getText().isEmpty() || ParP1Secp256r1.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA1Secp256r1.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB1Secp256r1.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP1Secp256r1.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog1Secp256r1.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf1Secp256r1ActionPerformed

    private void conf2Secp256r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf2Secp256r1ActionPerformed
        if (ParA2Secp256r1.getText().isEmpty() || ParB2Secp256r1.getText().isEmpty() || ParP2Secp256r1.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA2Secp256r1.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB2Secp256r1.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP2Secp256r1.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog2Secp256r1.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf2Secp256r1ActionPerformed

    private void conf1Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf1Secp256k1ActionPerformed
        if (ParA1Secp256k1.getText().isEmpty() || ParB1Secp256k1.getText().isEmpty() || ParP1Secp256k1.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA1Secp256k1.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB1Secp256k1.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP1Secp256k1.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog1Secp256k1.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf1Secp256k1ActionPerformed

    private void conf2Secp256k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conf2Secp256k1ActionPerformed
        if (ParA2Secp256k1.getText().isEmpty() || ParB2Secp256k1.getText().isEmpty() || ParP2Secp256k1.getText().isEmpty()) {
            Object msj4 = "No ha introducido los parámetros";
            System.out.println("AVISO: " + msj4 + '\n');
            JOptionPane.showMessageDialog(null, msj4, "Aviso", WARNING_MESSAGE);
            /// Hay que tener cuidado sis e introduce texto, no se contempla que se introduzcan hexadecimales solo decimales.
            /// Poner límite mínimo de tamaño.
        } else {
            String a = ParA2Secp256k1.getText();
            BigInteger bA = new BigInteger(a);
            String b = ParB2Secp256k1.getText();
            BigInteger bB = new BigInteger(b);
            String p = ParP2Secp256k1.getText();
            BigInteger bP = new BigInteger(p);

            if (!pertenecenAFp(bP, bA, bB)) {
                String error = "ERROR: No ha introducido correctamente los parámetros";
                System.out.println(error + '\n');
                JOptionPane.showMessageDialog(null, error, "Error", ERROR_MESSAGE);
            } else {
                String correcto = "Los parámetros introducidos se han guradado correctamente";
                System.out.println("Los parámetros introducidos son correctos \n");
                JOptionPane.showMessageDialog(null, correcto, "Información", INFORMATION_MESSAGE);
                // Con esto hacemos que si los parámetros son correctos informamos con un mensaje y se cierra la ventana.
                jDialog2Secp256k1.setVisible(false);
            }
        }
    }//GEN-LAST:event_conf2Secp256k1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea InputMensaje;
    public javax.swing.JTextField ParA1P256;
    private javax.swing.JTextField ParA1SM2;
    private javax.swing.JTextField ParA1Secp256k1;
    private javax.swing.JTextField ParA1Secp256r1;
    public javax.swing.JTextField ParA2P256;
    private javax.swing.JTextField ParA2SM2;
    private javax.swing.JTextField ParA2Secp256k1;
    private javax.swing.JTextField ParA2Secp256r1;
    public javax.swing.JTextField ParB1P256;
    private javax.swing.JTextField ParB1SM2;
    private javax.swing.JTextField ParB1Secp256k1;
    private javax.swing.JTextField ParB1Secp256r1;
    public javax.swing.JTextField ParB2P256;
    private javax.swing.JTextField ParB2SM2;
    private javax.swing.JTextField ParB2Secp256k1;
    private javax.swing.JTextField ParB2Secp256r1;
    public javax.swing.JTextField ParP1P256;
    private javax.swing.JTextField ParP1SM2;
    private javax.swing.JTextField ParP1Secp256k1;
    private javax.swing.JTextField ParP1Secp256r1;
    public javax.swing.JTextField ParP2P256;
    private javax.swing.JTextField ParP2SM2;
    private javax.swing.JTextField ParP2Secp256k1;
    private javax.swing.JTextField ParP2Secp256r1;
    public javax.swing.JRadioButton botonDosP256;
    public javax.swing.JRadioButton botonDosSM2;
    public javax.swing.JRadioButton botonDossecp256k1;
    public javax.swing.JRadioButton botonDossecp256r1;
    private javax.swing.JButton botonFirmar;
    public javax.swing.JRadioButton botonUnoP256;
    public javax.swing.JRadioButton botonUnoSM2;
    public javax.swing.JRadioButton botonUnosecp256k1;
    public javax.swing.JRadioButton botonUnosecp256r1;
    public javax.swing.JButton cambParaDos;
    public javax.swing.JButton cambParaUno;
    public javax.swing.JTextArea campoTextoMsgPred;
    private javax.swing.JButton conf1P256;
    private javax.swing.JButton conf1SM2;
    private javax.swing.JButton conf1Secp256k1;
    private javax.swing.JButton conf1Secp256r1;
    private javax.swing.JButton conf2P256;
    private javax.swing.JButton conf2SM2;
    private javax.swing.JButton conf2Secp256k1;
    private javax.swing.JButton conf2Secp256r1;
    public javax.swing.JDialog jDialog1P256;
    private javax.swing.JDialog jDialog1SM2;
    private javax.swing.JDialog jDialog1Secp256k1;
    private javax.swing.JDialog jDialog1Secp256r1;
    private javax.swing.JDialog jDialog2P256;
    private javax.swing.JDialog jDialog2SM2;
    private javax.swing.JDialog jDialog2Secp256k1;
    private javax.swing.JDialog jDialog2Secp256r1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
